(require '[vbn.styler :as styler])
(require 'vbn.styler :as styler)
exit
(comp (str) "hello")
(doc comp)
exit
(start-repl)
(+ 1 1)
(require '[garden.core :refer [css])
(require '[garden.core :refer [css]])
(css {:color 'blue})
(css [:div { :color 'blue}])
(css {:border 0})
(str "This is it" 
@styler/global-css-atom)
(str "This is it" )
exity
exit
(def new-style "hello")
new-style
(def new-atom "man")
new-atom
(def happy-atom new-style)
happy -atom
@happy-atom
(def happy-atom  atom new-style)
(def new-atom (atom "man"))
@new-atom
(def happy-atom  (atom new-style))
@happy-atom
(System/setProperty "random" "test")
(System/getProperty "random")
(def example (atom (+ 1 1)))
exampe
@example
(def random (atom (read-str (System/getProperty "random"))))
(def random (atom (read-string (System/getProperty "random"))))
@random
exit
